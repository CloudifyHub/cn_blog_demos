-- cndemo_document_ai_fields
DROP TABLE CNDEMO_DOCUMENT_AI_FIELDS;
CREATE TABLE CNDEMO_DOCUMENT_AI_FIELDS
(word_id             NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT CNDEMO_DOCUMENT_AI_FIELDS_PK PRIMARY KEY NOT NULL
,document_id         NUMBER NOT NULL
,field_type_code     VARCHAR2(50)  NOT NULL
,field_label         VARCHAR2(100)
,label_score         NUMBER
,field_value         VARCHAR2(1000)
,creation_date       TIMESTAMP WITH LOCAL TIME ZONE NOT NULL
,created_by          VARCHAR2(255) NOT NULL
,last_update_date    TIMESTAMP WITH LOCAL TIME ZONE NOT NULL
,last_updated_by     VARCHAR2(255) NOT NULL);

CREATE INDEX CNDEMO_DOCUMENT_AI_FIELDS_N1 ON CNDEMO_DOCUMENT_AI_FIELDS (document_id);

-- Trigger to handle record history fields.
CREATE OR REPLACE EDITIONABLE TRIGGER CNDEMO_DOCUMENT_AI_FIELDS_BIU
BEFORE INSERT OR UPDATE ON CNDEMO_DOCUMENT_AI_FIELDS FOR EACH ROW
BEGIN
  IF INSERTING THEN
    :new.created_by       := COALESCE(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER'));
    :new.creation_date    := current_timestamp;
    :new.last_updated_by  := COALESCE(SYS_CONTEXT('APEX$SESSION','APP_USER'),SYS_CONTEXT('USERENV', 'SESSION_USER'));
    :new.last_update_date := current_timestamp;
  ELSIF UPDATING THEN
    :new.last_updated_by  := COALESCE(SYS_CONTEXT('APEX$SESSION','APP_USER'),USER);
    :new.last_update_date := current_timestamp;
  END IF;
END;
/
